snippet Log "debugging log" b
Log::debug("\n\n${1:MESSAGE}", ${2:VAR}, "\n\n");
endsnippet

snippet stackTrace "stack trace log" b
Log::stackTrace();
endsnippet

snippet test "test with generate" b
/**
* @test
* @group ${1:GROUP}
* @dataProvider generate$2Data
*/
public function test${2:FUNCTION}()
{
	//top level variables

	$sut = $this->getSut('some function');

	//setup some mocks (remember that functions needing access outside of scope need a `use (&$var)` bit attached)

	//expectations
}

public function generate$2Data()
{
	return [
		'description' => [
			'args' => [
			],
			'expected' => [
			],
		],
	];
}
endsnippet

snippet assertEquals "$this->assertEquals()" b
$this->assertEquals(${1:EXPECTED}, ${2:ACTUAL});
endsnippet

snippet assertTrue "$this->assertTrue()" b
$this->assertTrue(${1:VALUE}, ${2:ERROR_MSG});
endsnippet
